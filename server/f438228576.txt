# # dev build
# FROM ghcr.io/immich-app/base-server-dev:202503251114@sha256:10e8973e8603c5729436d0f8ca32e7794375d9d1e428d65725eb03979b60c891 AS dev

# RUN apt-get install --no-install-recommends -yqq tini
# WORKDIR /usr/src/app

# # Ensure package-lock.json is present and copied correctly
# COPY server/package.json server/package-lock.json ./
# RUN npm install -g npm@7 && \
#   npm ci --legacy-peer-deps --no-audit --no-fund && \
#   # exiftool-vendored.pl, sharp-linux-x64 and sharp-linux-arm64 are the only ones we need
#   # they're marked as optional dependencies, so we need to copy them manually after pruning
#   rm -rf node_modules/@img/sharp-libvips* && \
#   rm -rf node_modules/@img/sharp-linuxmusl-x64

# ENV PATH="${PATH}:/usr/src/app/bin" \
#   IMMICH_ENV=development \
#   NVIDIA_DRIVER_CAPABILITIES=all \
#   NVIDIA_VISIBLE_DEVICES=all

# ENTRYPOINT ["tini", "--", "/bin/sh"]

# dev build using the base Immich image
FROM ghcr.io/immich-app/base-server-dev:202505131114@sha256:cf4507bbbf307e9b6d8ee9418993321f2b85867da8ce14d0a20ccaf9574cb995 AS dev


RUN apt-get update && apt-get install --no-install-recommends -yqq tini

# Install Node.js v20.18.3 and npm v11.3.0
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
  apt-get install -y nodejs && \
  npm install -g npm@11.3.0


# Ensure working directory is set
WORKDIR /usr/src/app

# Ensure package-lock.json is copied correctly
COPY server/package.json server/package-lock.json ./
COPY server/patches ./patches

# Install dependencies
RUN npm ci --legacy-peer-deps --no-audit --no-fund && \
  # Clean up sharp-related files
  rm -rf node_modules/@img/sharp-libvips* && \
  rm -rf node_modules/@img/sharp-linuxmusl-x64

# Set environment variables
ENV PATH="${PATH}:/usr/src/app/bin" \
    IMMICH_ENV=development \
    NVIDIA_DRIVER_CAPABILITIES=all \
    NVIDIA_VISIBLE_DEVICES=all

ENTRYPOINT ["tini", "--", "/bin/sh"]

# prod build
FROM dev AS prod

COPY server .
RUN npm run build
RUN npm prune --omit=dev --omit=optional

# Copy necessary files from the development build
COPY --from=dev /usr/src/app/node_modules/@img ./node_modules/@img
COPY --from=dev /usr/src/app/node_modules/exiftool-vendored.pl ./node_modules/exiftool-vendored.pl

# web build
FROM node:22.15.0-alpine3.20@sha256:686b8892b69879ef5bfd6047589666933508f9a5451c67320df3070ba0e9807b AS web

WORKDIR /usr/src/open-api/typescript-sdk
COPY open-api/typescript-sdk/package*.json open-api/typescript-sdk/tsconfig*.json ./
RUN npm ci
COPY open-api/typescript-sdk/ ./
RUN npm run build

WORKDIR /usr/src/app
COPY web/package*.json web/svelte.config.js ./
RUN npm ci
COPY web ./
COPY i18n ../i18n
RUN npm run build

# prod build
FROM ghcr.io/immich-app/base-server-prod:202505061115@sha256:9971d3a089787f0bd01f4682141d3665bcf5efb3e101a88e394ffd25bee4eedb

WORKDIR /usr/src/app
ENV NODE_ENV=production \
    NVIDIA_DRIVER_CAPABILITIES=all \
    NVIDIA_VISIBLE_DEVICES=all

# Copy files from previous stages
COPY --from=prod /usr/src/app/node_modules ./node_modules
COPY --from=prod /usr/src/app/dist ./dist
COPY --from=prod /usr/src/app/bin ./bin
COPY --from=web /usr/src/app/build /build/www
COPY server/resources resources
COPY server/package.json server/package-lock.json ./
COPY server/start*.sh ./
COPY "docker/scripts/get-cpus.sh" ./

# Install CLI and clean up cache
RUN npm link && npm install -g @immich/cli && npm cache clean --force

# Copy licenses
COPY LICENSE /licenses/LICENSE.txt
COPY LICENSE /LICENSE

# Set environment variables
ENV PATH="${PATH}:/usr/src/app/bin"

# Build metadata
ARG BUILD_ID
ARG BUILD_IMAGE
ARG BUILD_SOURCE_REF
ARG BUILD_SOURCE_COMMIT

ENV IMMICH_BUILD=${BUILD_ID}
ENV IMMICH_BUILD_URL=https://github.com/immich-app/immich/actions/runs/${BUILD_ID}
ENV IMMICH_BUILD_IMAGE=${BUILD_IMAGE}
ENV IMMICH_BUILD_IMAGE_URL=https://github.com/immich-app/immich/pkgs/container/immich-server
ENV IMMICH_REPOSITORY=immich-app/immich
ENV IMMICH_REPOSITORY_URL=https://github.com/immich-app/immich
ENV IMMICH_SOURCE_REF=${BUILD_SOURCE_REF}
ENV IMMICH_SOURCE_COMMIT=${BUILD_SOURCE_COMMIT}
ENV IMMICH_SOURCE_URL=https://github.com/immich-app/immich/commit/${BUILD_SOURCE_COMMIT}

# Define volume for uploads
VOLUME /usr/src/app/upload

# Expose the server port
EXPOSE 2283

# Define entrypoint and default command
ENTRYPOINT ["tini", "--", "/bin/bash"]
CMD ["start.sh"]

# Healthcheck command
HEALTHCHECK CMD immich-healthcheck
